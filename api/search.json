[{"id":"bd725af53047b57265e7d1031e383f59","title":"搭建个人博客 | 引言","content":"写在前面技术路线文档结构个人博客搭建教程预计共5部分：\n\n搭建个人博客 | 引言\n搭建个人博客 | 本地框架\n搭建个人博客 | 服务器部署\n搭建个人博客 | 域名配置\n搭建个人博客 | 网站主题\n搭建个人博客 | 细节美化\n\n","slug":"BuildBlog-Why","date":"2023-08-18T02:34:17.274Z","categories_index":"学习记录","tags_index":"Blog","author_index":"ApolloH"},{"id":"5d0343ebd26904f0692de3f19d1c235a","title":"Git学习笔记（上）","content":"Learning Git 1 【Basic】Git Referrence\nIDE：Ctrl+&#96; 打开终端Terminal Shell\n设置用户名git config --global user.name \"hust\"\ngit config --global user.email \"hust@hust.edu.cn\"\n\n方式一初始化 git仓库git init\n\n为git仓库增加README.md文件git add README.md\n\n提交更改git commit -m \"first commit\"\n\n设置远程仓库git remote add origin https://github.com/yourRepoName.git\n\n推送到远程仓库git push -u origin master\n\n\n方式二从远程仓库克隆git clone https://github.com/yourRepoName.git\n\n为git仓库增加README.md文件git add README.md\n\n提交更改git commit -m \"first commit\"\n\n推送到远程仓库git push -u origin master\n\n\n回退分支git log\ngit reset --hard &lt;version> ","slug":"LearningGit-1","date":"2023-08-17T00:59:10.616Z","categories_index":"学习记录","tags_index":"Git","author_index":"ApolloH"},{"id":"d7b3727bda59e083c15f8ff5e688b23d","title":"Git学习笔记（下）","content":"Learning Git 2 【Branch】0 默认分支\n1 新建本地分支并切换分支首先，我们创建dev分支，然后切换到dev分支：\ngit checkout -b dev #checkout 检出\n\ngit checkout命令加上-b参数表示创建并切换，相当于以下两条命令：\ngit branch dev\ngit checkout dev\n\n\n2 向新分支添加新文件并提交然后，用git branch命令查看当前分支。git branch命令会列出所有分支，当前分支前面会标一个*号。\ngit branch\n\n然后，我们就可以在dev分支上正常提交，比如增加一个文件。\n然后提交：\ngit add *.*\ngit commit -m \"branch test\"\ngit push --set-upstream origin dev\n\n\n3 切换为主分支现在，dev分支的工作完成，我们就可以切换回master分支：\ngit checkout master\n\n切换回master分支后，再查看一个README.md文件，刚才添加的内容不见了！因为那个提交是在dev分支上，而master分支此刻的提交点并没有变：\n\n4 合并分支现在，我们把branch分支的工作成果合并到master分支上：\ngit merge dev\ngit merge命令用于合并指定分支到当前分支。合并后，再查看readme.txt的内容，就可以看到，和dev分支的最新提交是完全一样的。\n\n注意到上面的Fast-forward信息，Git告诉我们，这次合并是“快进模式”，也就是直接把master指向dev的当前提交，所以合并速度非常快。\n当然，也不是每次合并都能Fast-forward，我们后面会讲其他方式的合并。\n5 删除分支合并完成后，就可以放心地删除dev分支了：\n删除本地分支\ngit branch -d dev\n删除后，查看branch，就只剩下master分支了：\n\ngit branch    #查看本地分支\ngit branch -a #查看所有分支（包含远程分支）\n因为创建、合并和删除分支非常快，所以Git鼓励你使用分支完成某个任务，合并后再删掉分支，这和直接在master分支上工作效果是一样的，但过程更安全。\n删除远程分支\ngit push origin --delete dev ","slug":"LearningGit-2","date":"2023-08-17T00:59:10.616Z","categories_index":"学习记录","tags_index":"Git","author_index":"ApolloH"},{"id":"0ae1f60cd026513572ec9ef24fcb9217","title":"Markdown学习笔记","content":" 举一纲而万目张, 解一卷而众篇明\n> ——汉·郑玄《诗谱序》\n\n一篇文档的内容组织结构可分为：\n* 标题\n* 目录\n* 分章节的正文\n* 参考文献\n\n一篇文档的内容表达形式可分为：\n* 文字与段落\n* 图形\n* 表格\n* 公式 -->\n\n\n\n1. 标题 Markdown\n1.1 第一种写法在一行文本的开头输入若干个”#”，并用一个空格与文本分隔，该行文本即可识别为相应等级的标题（最小标题位6级）。\n# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题\n\n1.2 第二种写法一级标题的另一种写法，在一行文字下方连续输入3个以上的等号”&#x3D;”二级标题的另一种写法，在一行文字下方连续输入3个以上的减号”-“这是一级标题\n===这是二级标题\n---## 1.3 第3种写法与第1种写法类似# 一级标题 #\n## 二级标题 ##\n### 三级标题 ###多级标题实际效果# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题2. 文本样式2.1 加粗在正文中想要加粗的效果，可以在文字的前后分别输入2个星号”*”,或短下划线”_”\n**粗体**__粗体__\n实际效果 粗体粗体\n2.2 斜体在正文中想要倾斜的效果，可以在文字的前后分别输入1个星号”*”,或短下划线”_”\n*斜体* _斜体_\n实际效果\n斜体 斜体2.3 粗体+斜体 **_粗体+斜体_** __*粗体+斜体*__\n__*粗体+斜体*__ *__粗体+斜体__*\n实际效果 粗体+斜体 粗体+斜体粗体+斜体 粗体+斜体\n2.4 字体颜色markdown通过html实现字体颜色\n&lt;label style=\"color:red\">内容1&lt;/label>\n&lt;label style=\"color:#ff0000\">内容2&lt;/label>\n&lt;label style=\"color:#f00\">内容3&lt;/label>\n内容 内容 内容\n2.5 删除线在正文中想要删除的文字前后分别输入两个波浪号”~~”\n~~删除~~\n 删除\n2.6 下划线在正文中想要下划线的文字前后分别输入”&lt;u&gt;“和”&lt;/u&gt;“&lt;u>下划线&lt;/u>3. 段落3.1 换行符Markdown语言中的换行符这是第一行&lt;br>这是第二行实际效果：这是第一行这是第二行Tip：html中换行符对封闭不做要求## 3.2 强调    如果要加入内容框，想要特别强调某个段落。可以在该段的开头连续输入4个空格。    此处为连续强调的段落。如果想跳出强调段落，只需插入一行空行。\n    4. 引用4.1 引用当在一段文字前输入大于号”&gt;”，并用一个空格与正文分隔，这段话就会以引用的方式呈现，例如：> 这是一句引用。实际效果&gt; 这是一句引用。## 4.2 引用+强调>     这是一句被强调的引用实际效果&gt;     这是一句被强调的引用### 4.3 引用嵌套只需要不断增加正文前的大于号”&gt;”。&gt; 这是第一层的引用。&gt;&gt; 这是第二层的引用。&gt;&gt;&gt; 这是第三层的引用5.代码5.1 行中插入在文档中的某一行插入一句较短的代码片段，可以在代码的前后输入一个反撇号” &#96; “（键盘ESC键下方波浪线“~”所在键）\n例如，git仓库初始化的命令行为git init\n5.2 行间插入如果想输入成段代码，可以将成段的代码以三个连续的反撇号”&#96;”包围。可以根据语言高亮代码，直接在开始的反撇号后加入语言名称\npythondef Function():\n    a=0\n    b=1\n    print((a+b))\n    passjavascriptalert(\"Hello World\")csharpnamespace demo&#123;\n    public class MyClass&#123;\n        public MyClass()&#123;\n\n        &#125;\n\n        private int _value;\n    &#125;\n&#125;6. 列表在Markdown中的列表有两种：无序列表和有序列表。\n6.1 无序列表：在文字开头添加一个星号”*”，或者是加号”+”，减号”-“，并用空格与正文分隔，即可创建无序列表。\n* 这是一个无序列表的第一项\n* 这是第二项\n* 这是最后一项\n\n+ 这是一个无序列表的第一项\n+ 这是第二项\n+ 这是最后一项\n\n- 这是一个无序列表的第一项\n- 这是第二项\n- 这是最后一项\n实际效果\n\n这是一个无序列表的第一项\n这是第二项\n这是最后一项\n\n\n这是一个无序列表的第一项\n这是第二项\n这是最后一项\n\n\n这是一个无序列表的第一项\n这是第二项\n这是最后一项\n\n6.2 有序列表：在文字的开头，添加一个阿拉伯数字和一个点”.”，并用空格与正文分隔，即可创建有序列表。1. 这是一个有序列表的第一项\n2. 这是第二项\n3. 注意：不管输入的是什么数字，渲染后的有序列表都会按顺序进行递增！！！实际效果1. 这是一个有序列表的第一项2. 这是第二项3. 注意：不管输入的是什么数字，渲染后的有序列表都会按顺序进行递增！！！7. 分割线在Markdown中，在一个空行后另起一行的开头输入3个以上的星号”*”，或者减号”-“，即可插入一条分割线。---\n***\n* * *\n- - -8. 链接8.1 网址链接在Markdown中插入链接，需要采用方括号圆括号组合的形式，方括号中设置链接的文本，圆括号中设置包含链接的地址,链接可以设置加粗或者斜体.\n[Github](https://www.github.com/)\n**[Github](https://www.github.com/)**\n*[Github](https://www.github.com/)*\nGithub Github Github\n8.2 邮箱链接Email也是一种特殊的链接\n&lt;xxx@qq.com>\n&#120;&#x78;&#x78;&#64;&#113;&#113;&#46;&#99;&#x6f;&#109;\n\n9. 图片在Markdown文档中插入图片与插入链接的方式相似。\n![微软图标](https://img-prod-cms-rt-microsoft-com.akamaized.net/cms/api/am/imageFileData/RE1Mu3b?ver=5c31\"微软图标\")\n\n!表示图片\n[]里面是图片显示不出的时候显示文字\n()里面是图片地址\n\n\n10. 脚注这是脚注[^1]\n[^1]:注释脚注说明，将会在文章的末尾显示。\n这是脚注[^1][^1]:注释脚注说明，将会在文章的末尾显示。11. 表格11.1 实现方式1| Title1  | Title2  | Title3  |\n| ------- | ------- | ------- |\n| Cell_11 | Cell_12 | Cell_13 |\n| Cell_21 | Cell_22 | Cell_23 |\n| Cell_31 | Cell_32 | Cell_33 |\n\n\n\n\nTitle1\nTitle2\nTitle3\n\n\n\nCell_11\nCell_12\nCell_13\n\n\nCell_21\nCell_22\nCell_23\n\n\nCell_31\nCell_32\nCell_33\n\n\n| Title1           |    Title2    |           Title3 |\n| :--------------- | :----------: | ---------------: |\n| &lt;-左对齐&lt;-左对齐  | ->居中对齐&lt;-  | 右对齐->右对齐->  |\n| Cell_21          |   Cell_22    |          Cell_23 |\n| Cell_31          |   Cell_32    |          Cell_33 |\n\n\n\nTitle1\nTitle2\nTitle3\n\n\n\n&lt;-左对齐&lt;-左对齐\n-&gt;居中对齐&lt;-\n右对齐-&gt;右对齐-&gt;\n\n\nCell_21\nCell_22\nCell_23\n\n\nCell_31\nCell_32\nCell_33\n\n\n11.2 实现方式2&lt;table>\n    &lt;thead>\n        &lt;td align=\"left\">Title1&lt;/td>\n        &lt;td align=\"center\">Title2&lt;/td>\n        &lt;td align=\"right\">Title2&lt;/td>\n    &lt;/thead>\n    &lt;tbody>\n        &lt;tr>\n            &lt;td>Cell_21&lt;/td>\n            &lt;td>Cell_22&lt;/td>\n            &lt;td>Cell_23&lt;/td>\n        &lt;tr>\n        &lt;tr>\n            &lt;td>Cell_31&lt;/td>\n            &lt;td>Cell_32&lt;/td>\n            &lt;td>Cell_33&lt;/td>\n        &lt;tr>\n    &lt;/tbody>\n&lt;/table>\n\n    \n        Title1\n        Title2\n        Title2\n    \n    \n        \n            Cell_21\n            Cell_22\n            Cell_23\n        \n        \n            Cell_31\n            Cell_32\n            Cell_33\n        \n    \n\n\n\n12. 图片位置的设置&lt;p align=\"left\">这是左对齐的段落&lt;/p>\n&lt;img src=\"https://img-prod-cms-rt-microsoft-com.akamaized.net/cms/api/am/imageFileData/RE1Mu3b?ver=5c31\" width=\"100px\" style=\"margin-left:100px\">\n&lt;center>这是居中对齐的段落&lt;/center>\n&lt;center>&lt;img src=\"https://img-prod-cms-rt-microsoft-com.akamaized.net/cms/api/am/imageFileData/RE1Mu3b?ver=5c31\">&lt;/center>\n&lt;p align=\"right\">这是右对齐的段落&lt;/p>\n&lt;p align=\"right\">&lt;img src=\"https://img-prod-cms-rt-microsoft-com.akamaized.net/cms/api/am/imageFileData/RE1Mu3b?ver=5c31\">&lt;/p>\n这是左对齐的段落\n\n这是居中对齐的段落\n\n这是右对齐的段落\n\n\n\n13. 计划任务- [x] 待办任务1(已完成)\n- [ ] 待办任务2(未完成)\n\n 待办任务1(已完成)\n 待办任务2(未完成)\n\n\n14. LaTex数学公式14.1 行内公式使用两个”$”符号引用公式\n声明变量$x$，$y$\n声明变量$x$，$y$\n14.2 行间公式使用两对”$$”符号引用公式\n正态分布 $\\N(\\mu,\\sigma^2)$的概率密度函数：\n$$ f(x) &#x3D; \\frac&#123;1&#125;&#123;\\sqrt&#123;2\\pi&#125;\\sigma&#125;&#123;e^&#123;-\\frac&#123;(x-\\mu)^2&#125;&#123;2\\sigma^2&#125;&#125;&#125; $$\n$$ f(x) &#x3D; \\frac{1}{\\sqrt{2\\pi}\\sigma}{e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}}} $$积分：\n$$ y &#x3D; \\int_&#123;-\\infty&#125;^&#123;\\infty&#125;&#123;f(x)&#125;dx $$\n$$ y &#x3D; \\int_{-\\infty}^{\\infty}{f(x)}dx $$矩阵\n$$ \\left|\n\\begin&#123;array&#125;&#123;lcr&#125;\na &amp; b &amp; c\\\\\nd &amp; e &amp; f\\\\\n\\end&#123;array&#125;\n\\right|\n$$\n$$ \\left|\\begin{array}{lcr}a &amp; b &amp; c\\d &amp; e &amp; f\\\\end{array}\\right|$$\n\n15.高级技巧15.1 支持的 HTML 元素不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。目前支持的 HTML 元素有：&lt;kbd&gt; &lt;b&gt; &lt;i&gt; &lt;em&gt; &lt;sup&gt; &lt;sub&gt; &lt;br&gt; &lt;u&gt;等 ，如：\n`&lt;kbd>` keyboard: &lt;kbd>Ctrl&lt;/kbd>+&lt;kbd>Alt&lt;/kbd>+&lt;kbd>A&lt;/kbd>\n`&lt;b>` bold: &lt;b>加粗&lt;/b>\n`&lt;i>` italic: &lt;i>斜体&lt;/i>\n`&lt;em>` emphasize: &lt;em>强调&lt;/em>\n`&lt;sup>` superscript: 这个是&lt;sup>上标&lt;/sup>\n`&lt;sub>` subscript: 这个是&lt;sub>下标&lt;/sub>\n`&lt;br>` break: 这个是换&lt;br>行\n`&lt;u>` underline: &lt;u>下划线&lt;/u>\n&lt;kbd&gt; keyboard: Ctrl+Alt+A&lt;b&gt; bold: 加粗&lt;i&gt; italic: 斜体&lt;em&gt; emphasize: 强调&lt;sup&gt; superscript: 这个是上标&lt;sub&gt; subscript: 这个是下标&lt;br&gt; break: 这个是换行&lt;u&gt; underline: 下划线\n15.2 转义Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符：Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：\n\\   反斜线\n`   反引号\n*   星号\n_   下划线\n&#123;&#125;  花括号\n[]  方括号\n()  小括号\n#   井字号\n+   加号\n-   减号\n.   英文句点\n!   感叹号\n15.3 emojimarkdown支持基本的emoji渲染\n:smile: :laughing: :blush: :smiley: :relaxed: :smirk: :heart_eyes: :kissing_heart: :kissing_closed_eyes: :flushed: :relieved: :satisfied: :grin: :wink: :stuck_out_tongue_winking_eye: :stuck_out_tongue_closed_eyes: :grinning: :kissing: :kissing_smiling_eyes: :stuck_out_tongue: :sleeping: :worried: :frowning: :anguished: :open_mouth: :grimacing: :confused: :hushed: :expressionless: :unamused: :sweat_smile: :sweat: :disappointed_relieved: :weary: :pensive: :disappointed: :confounded: :fearful: :cold_sweat: :persevere: :cry: :sob: :joy: :astonished: :scream: :tired_face: :angry: :rage: :triumph: :sleepy: :yum: :mask: :sunglasses: :dizzy_face: :imp: :smiling_imp: :neutral_face: :no_mouth: :innocent: :alien:\n:smile: :laughing: :blush: :smiley: :relaxed: :smirk: :heart_eyes: :kissing_heart: :kissing_closed_eyes: :flushed: :relieved: :satisfied: :grin: :wink: :stuck_out_tongue_winking_eye: :stuck_out_tongue_closed_eyes: :grinning: :kissing: :kissing_smiling_eyes: :stuck_out_tongue: :sleeping: :worried: :frowning: :anguished: :open_mouth: :grimacing: :confused: :hushed: :expressionless: :unamused: :sweat_smile: :sweat: :disappointed_relieved: :weary: :pensive: :disappointed: :confounded: :fearful: :cold_sweat: :persevere: :cry: :sob: :joy: :astonished: :scream: :tired_face: :angry: :rage: :triumph: :sleepy: :yum: :mask: :sunglasses: :dizzy_face: :imp: :smiling_imp: :neutral_face: :no_mouth: :innocent: :alien:\n","slug":"LearningMarkdown","date":"2023-08-16T01:34:08.779Z","categories_index":"学习记录","tags_index":"Markdown","author_index":"ApolloH"}]