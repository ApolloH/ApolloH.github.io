[{"id":"ec5a7aa685a6e54bfdc6ba5d3d2f0f1c","title":"饮食篇：如何在增肌期内完成减脂","content":"写在前面截止到动笔写这篇文章时，我走进健身房开始锻炼正好7个月。在这段时间里，我经历过一周六练，完成两轮三分化的疯狂时期；也经历过弃训半个月，每天胡吃海喝的摆烂阶段。那么，健身到底给我的身体带来了多大的变化，先用两组身体数据来直观展示：\n\n\n\n日期\n02&#x2F;27\n03&#x2F;20\n04&#x2F;21\n05&#x2F;06\n05&#x2F;27\n06&#x2F;29\n08&#x2F;25\n09&#x2F;21\n\n\n\n体重(kg)\n78.8\n76.2\n76.1\n77.5\n76.4\n77.5\n78.3\n79.4\n\n\n骨骼肌(kg)\n34.5\n34.7\n34.1\n35.7\n35.1\n36.1\n36.1\n35.7\n\n\n体脂率(%)\n22.9\n20.1\n20.9\n19.3\n19.4\n18.4\n19.6\n21.2\n\n\n这样看不够直观，把这些数据画成曲线：\n从图中的趋势可以看出：\n\n前4个月：我保证了充足的训练强度和训练时间，显而易见的好处是我的体脂率迅速下降，骨骼肌含量上升，总体重先随着脂肪减少而下降，后随着骨骼肌进一步增多而增加；\n后3个月：科研压力的增加导致力训时间减少，更要命的是有氧运动时间也在减少，在这种窘迫的处境下，我的体脂迅速回弹，骨骼肌含量也有下坠的趋势，总体重甚至比刚开始健身时还要重！\n\n在这段时期，我的饮食习惯和饮食结构是几乎没有变化的，总体风格是：不限制食物量，会稍微留心食物种类，但仍然不做过多限制。关键的问题是，尽管后三个月我的训练时间和训练强度下降，但总体运动量可仍然比不健身的时期要大多了，为什么体脂和体重会出现如此明显的反弹呢？经过了一番研究，我得出的核心结论是饮食结构存在问题，之前的饮食虽说并无害处，但考虑到我对自身在增肌和减脂方面的期待，未免显得过于随意了些，这篇文章的基本目的是为自己制定一个合适的饮食指导方案，同时科普一些营养学的基本概念。\n","slug":"BodyBuilding","date":"2023-09-27T12:35:28.299Z","categories_index":"-健身记录","tags_index":"-Diet","author_index":"ApolloH"},{"id":"345e68f225a02e97ed9f9f14e4f97223","title":"如何基于.NET实现面向Web的软件开发","content":"如何开始基于.NET的基于Web的云平台软件开发开始基于.NET的基于Web的云平台软件开发是一个很好的选择。以下是一个逐步指南，帮助您入门，并提供一些推荐的材料和资源：\n1. 学习.NET和C#的基础知识：\n\n如果您对.NET和C#不太熟悉，首先学习语言和.NET框架的基础知识。\n推荐资源：\n微软的官方文档和教程 .NET\n在Coursera、edX或Pluralsight等平台上的在线课程。\n\n\n\n2. 理解Web开发概念：\n\n对Web开发概念有扎实的掌握，包括HTML、CSS和JavaScript，因为它们对于基于Web的应用程序至关重要。\n推荐资源：\nMozilla开发者网络（MDN）的HTML、CSS和JavaScript文档。\n\n\n\n3. 选择一个Web框架：\n\n.NET提供了多个用于构建Web应用程序的Web框架，包括ASP.NET Web Forms、ASP.NET MVC和ASP.NET Core（现在是.NET 5+）。选择与项目需求相符的框架。\n推荐资源：\n微软官方文档 ASP.NET Core。\n\n\n\n4. 了解云平台：\n\n熟悉云平台，如Microsoft Azure、Amazon Web Services（AWS）或Google Cloud Platform（GCP）。这些平台提供了在云中托管基于Web的应用程序所需的基础设施和服务。\n推荐资源：\n微软Azure的文档。\nAWS的入门指南。\n\n\n\n5. 探索数据库技术：\n\n了解如何处理数据库，因为它们是Web应用程序的重要组成部分。了解关系数据库（例如SQL Server）或NoSQL数据库（例如Azure Cosmos DB）。\n推荐资源：\n微软的SQL Server文档。\n\n\n\n6. 构建一个示例项目：\n\n从一个简单的基于Web的应用程序项目开始，将您所学到的知识应用到其中。使用您选择的Web框架创建一个小型Web应用程序，并将其部署到您选择的云平台上。\n推荐资源：\n微软的使用ASP.NET Core创建Web应用程序。\n\n\n\n7. 学习云服务：\n\n探索云服务，以增强您的Web应用程序，如身份验证、数据库服务和存储服务。大多数云提供商提供这些服务。\n推荐资源：\nAWS的入门指南。\n\n\n\n8. 持续学习和社区参与：\n\n通过关注与软件开发相关的博客、论坛和社交媒体，以及参与GitHub和Stack Overflow等平台的开发者社区，保持与最新.NET和云开发趋势的更新。\n\n9. 高级主题：\n\n随着您的进展，考虑深入研究高级主题，如微服务架构、容器化（例如Docker）和无服务器计算。\n\n10. 认证（可选）：    - 如果您想要验证您的技能，考虑获得与.NET和云平台相关的认证，这些认证由微软、AWS或其他提供商提供。\n","slug":"WebDevelop","date":"2023-09-11T11:39:55.981Z","categories_index":"软件开发","tags_index":".Net","author_index":"ApolloH"},{"id":"5fdbf0275c830359451ce2b1a2ccb2a3","title":"Markdown学习笔记[3]","content":"本文是markdown学习笔记的第三期，主要内容是markdown的高级语法，包括图片位置、计划任务、LaTeX数学公式以及html相关高级技巧等内容。\n1. 图片位置的设置&lt;p align=\"left\">这是左对齐的段落&lt;/p>\n&lt;img src=\"https://img-prod-cms-rt-microsoft-com.akamaized.net/cms/api/am/imageFileData/RE1Mu3b?ver=5c31\" width=\"100px\" style=\"margin-left:100px\">\n&lt;center>这是居中对齐的段落&lt;/center>\n&lt;center>&lt;img src=\"https://img-prod-cms-rt-microsoft-com.akamaized.net/cms/api/am/imageFileData/RE1Mu3b?ver=5c31\">&lt;/center>\n&lt;p align=\"right\">这是右对齐的段落&lt;/p>\n&lt;p align=\"right\">&lt;img src=\"https://img-prod-cms-rt-microsoft-com.akamaized.net/cms/api/am/imageFileData/RE1Mu3b?ver=5c31\">&lt;/p>\n这是左对齐的段落\n\n这是居中对齐的段落\n\n这是右对齐的段落\n\n\n\n2. 计划任务- [x] 待办任务1(已完成)\n- [ ] 待办任务2(未完成)\n\n 待办任务1(已完成)\n 待办任务2(未完成)\n\n\n3. LaTex数学公式3.1 行内公式使用两个”$”符号引用公式\n声明变量$x$，$y$\n声明变量$x$，$y$\n3.2 行间公式使用两对”$$”符号引用公式\n正态分布 $\\N(\\mu,\\sigma^2)$的概率密度函数：\n$$ f(x) &#x3D; \\frac&#123;1&#125;&#123;\\sqrt&#123;2\\pi&#125;\\sigma&#125;&#123;e^&#123;-\\frac&#123;(x-\\mu)^2&#125;&#123;2\\sigma^2&#125;&#125;&#125; $$\n$$ f(x) &#x3D; \\frac{1}{\\sqrt{2\\pi}\\sigma}{e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}}} $$积分：\n$$ y &#x3D; \\int_&#123;-\\infty&#125;^&#123;\\infty&#125;&#123;f(x)&#125;dx $$\n$$ y &#x3D; \\int_{-\\infty}^{\\infty}{f(x)}dx $$矩阵\n$$ \\left|\n\\begin&#123;array&#125;&#123;lcr&#125;\na &amp; b &amp; c\\\\\nd &amp; e &amp; f\\\\\n\\end&#123;array&#125;\n\\right|\n$$\n$$ \\left|\\begin{array}{lcr}a &amp; b &amp; c\\d &amp; e &amp; f\\\\end{array}\\right|$$\n\n4.高级技巧4.1 支持的 HTML 元素不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。目前支持的 HTML 元素有：&lt;kbd&gt; &lt;b&gt; &lt;i&gt; &lt;em&gt; &lt;sup&gt; &lt;sub&gt; &lt;br&gt; &lt;u&gt;等 ，如：\n`&lt;kbd>` keyboard: &lt;kbd>Ctrl&lt;/kbd>+&lt;kbd>Alt&lt;/kbd>+&lt;kbd>A&lt;/kbd>\n`&lt;b>` bold: &lt;b>加粗&lt;/b>\n`&lt;i>` italic: &lt;i>斜体&lt;/i>\n`&lt;em>` emphasize: &lt;em>强调&lt;/em>\n`&lt;sup>` superscript: 这个是&lt;sup>上标&lt;/sup>\n`&lt;sub>` subscript: 这个是&lt;sub>下标&lt;/sub>\n`&lt;br>` break: 这个是换&lt;br>行\n`&lt;u>` underline: &lt;u>下划线&lt;/u>\n&lt;kbd&gt; keyboard: Ctrl+Alt+A&lt;b&gt; bold: 加粗&lt;i&gt; italic: 斜体&lt;em&gt; emphasize: 强调&lt;sup&gt; superscript: 这个是上标&lt;sub&gt; subscript: 这个是下标&lt;br&gt; break: 这个是换行&lt;u&gt; underline: 下划线\n4.2 转义Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符：Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：\n\\   反斜线\n`   反引号\n*   星号\n_   下划线\n&#123;&#125;  花括号\n[]  方括号\n()  小括号\n#   井字号\n+   加号\n-   减号\n.   英文句点\n!   感叹号\n4.3 emojimarkdown支持基本的emoji渲染\n:smile: :laughing: :blush: :smiley: :relaxed: :smirk: :heart_eyes: :kissing_heart: :kissing_closed_eyes: :flushed: :relieved: :satisfied: :grin: :wink: :stuck_out_tongue_winking_eye: :stuck_out_tongue_closed_eyes: :grinning: :kissing: :kissing_smiling_eyes: :stuck_out_tongue: :sleeping: :worried: :frowning: :anguished: :open_mouth: :grimacing: :confused: :hushed: :expressionless: :unamused: :sweat_smile: :sweat: :disappointed_relieved: :weary: :pensive: :disappointed: :confounded: :fearful: :cold_sweat: :persevere: :cry: :sob: :joy: :astonished: :scream: :tired_face: :angry: :rage: :triumph: :sleepy: :yum: :mask: :sunglasses: :dizzy_face: :imp: :smiling_imp: :neutral_face: :no_mouth: :innocent: :alien:\n:smile: :laughing: :blush: :smiley: :relaxed: :smirk: :heart_eyes: :kissing_heart: :kissing_closed_eyes: :flushed: :relieved: :satisfied: :grin: :wink: :stuck_out_tongue_winking_eye: :stuck_out_tongue_closed_eyes: :grinning: :kissing: :kissing_smiling_eyes: :stuck_out_tongue: :sleeping: :worried: :frowning: :anguished: :open_mouth: :grimacing: :confused: :hushed: :expressionless: :unamused: :sweat_smile: :sweat: :disappointed_relieved: :weary: :pensive: :disappointed: :confounded: :fearful: :cold_sweat: :persevere: :cry: :sob: :joy: :astonished: :scream: :tired_face: :angry: :rage: :triumph: :sleepy: :yum: :mask: :sunglasses: :dizzy_face: :imp: :smiling_imp: :neutral_face: :no_mouth: :innocent: :alien:\n","slug":"LearningMarkdown-3","date":"2023-09-01T12:48:10.781Z","categories_index":"学习记录","tags_index":"Markdown","author_index":"ApolloH"},{"id":"cb692164d774b7ce9d199abf8e7af60e","title":"Markdown学习笔记[2]","content":"本文是markdown学习笔记的第二期，主要内容是markdown的进阶语法，包括链接、图片、脚注和表格等内容。\n1. 链接1.1 网址链接在Markdown中插入链接，需要采用方括号圆括号组合的形式，方括号中设置链接的文本，圆括号中设置包含链接的地址,链接可以设置加粗或者斜体.\n[Github](https://www.github.com/)\n**[Github](https://www.github.com/)**\n*[Github](https://www.github.com/)*\nGithub Github Github\n1.2 邮箱链接Email也是一种特殊的链接\n&lt;xxx@qq.com>\n&#120;&#120;&#120;&#64;&#113;&#x71;&#x2e;&#99;&#111;&#x6d;\n\n2. 图片2.1 图片地址第一种方法：采用相对路径\n\n将md文件和图片放在同级目录下\n以后复制文件的时候需要将图片一起打包进行传输![Alternative text](link \"optional title\")\n!表示图片Alternative text：图片不加载时显示的文字link：图片的本地地址或者网址optional title: 鼠标悬停时出现的标题文字\n\n![微软图标](https://img-prod-cms-rt-microsoft-com.akamaized.net/cms/api/am/imageFileData/RE1Mu3b?ver=5c31\"微软图标\")\n![绝对路径](E:\\xxx\\yyy\\zzz\\picture.jpg)\n假设md文件和zzz是并列关系\n![相对路径](zzz\\picture.jpg)\n2.2 base64图片编码使用base64图片编码时的格式\n![Alternative text][base64 label] \n但base64 label一般特别长，所以建议设置关键符存储在文档末尾\n![Alternative text][image id] \n[image id]:图片的base64编码\n图片转base64地址：菜鸟工具\n\n3. 脚注这是脚注[^1]\n[^1]:注释脚注说明，将会在文章的末尾显示。\n这是脚注[^1][^1]:注释脚注说明，将会在文章的末尾显示。\n\n4. 表格4.1 实现方式1| Title1  | Title2  | Title3  |\n| ------- | ------- | ------- |\n| Cell_11 | Cell_12 | Cell_13 |\n| Cell_21 | Cell_22 | Cell_23 |\n| Cell_31 | Cell_32 | Cell_33 |\n\n\n\n\nTitle1\nTitle2\nTitle3\n\n\n\nCell_11\nCell_12\nCell_13\n\n\nCell_21\nCell_22\nCell_23\n\n\nCell_31\nCell_32\nCell_33\n\n\n| Title1           |    Title2    |           Title3 |\n| :--------------- | :----------: | ---------------: |\n| &lt;-左对齐&lt;-左对齐  | ->居中对齐&lt;-  | 右对齐->右对齐->  |\n| Cell_21          |   Cell_22    |          Cell_23 |\n| Cell_31          |   Cell_32    |          Cell_33 |\n\n\n\nTitle1\nTitle2\nTitle3\n\n\n\n&lt;-左对齐&lt;-左对齐\n-&gt;居中对齐&lt;-\n右对齐-&gt;右对齐-&gt;\n\n\nCell_21\nCell_22\nCell_23\n\n\nCell_31\nCell_32\nCell_33\n\n\n4.2 实现方式2&lt;table>\n    &lt;thead>\n        &lt;td align=\"left\">Title1&lt;/td>\n        &lt;td align=\"center\">Title2&lt;/td>\n        &lt;td align=\"right\">Title2&lt;/td>\n    &lt;/thead>\n    &lt;tbody>\n        &lt;tr>\n            &lt;td>Cell_21&lt;/td>\n            &lt;td>Cell_22&lt;/td>\n            &lt;td>Cell_23&lt;/td>\n        &lt;tr>\n        &lt;tr>\n            &lt;td>Cell_31&lt;/td>\n            &lt;td>Cell_32&lt;/td>\n            &lt;td>Cell_33&lt;/td>\n        &lt;tr>\n    &lt;/tbody>\n&lt;/table>\n\n    \n        Title1\n        Title2\n        Title2\n    \n    \n        \n            Cell_21\n            Cell_22\n            Cell_23\n        \n        \n            Cell_31\n            Cell_32\n            Cell_33\n        \n    \n\n\n","slug":"LearningMarkdown-2","date":"2023-09-01T12:46:37.378Z","categories_index":"学习记录","tags_index":"Markdown","author_index":"ApolloH"},{"id":"bd725af53047b57265e7d1031e383f59","title":"搭建个人博客 | 引言","content":"写在前面技术路线文档结构个人博客搭建教程预计共5部分：\n\n搭建个人博客 | 引言\n搭建个人博客 | 本地框架\n搭建个人博客 | 服务器部署\n搭建个人博客 | 域名配置\n搭建个人博客 | 网站主题\n搭建个人博客 | 细节美化\n\n","slug":"BuildBlog-Why","date":"2023-08-18T02:34:17.274Z","categories_index":"学习记录","tags_index":"Blog","author_index":"ApolloH"},{"id":"d7b3727bda59e083c15f8ff5e688b23d","title":"Git学习笔记（下）","content":"Learning Git 2 【Branch】0 默认分支\n1 新建本地分支并切换分支首先，我们创建dev分支，然后切换到dev分支：\ngit checkout -b dev #checkout 检出\n\ngit checkout命令加上-b参数表示创建并切换，相当于以下两条命令：\ngit branch dev\ngit checkout dev\n\n\n2 向新分支添加新文件并提交然后，用git branch命令查看当前分支。git branch命令会列出所有分支，当前分支前面会标一个*号。\ngit branch\n\n然后，我们就可以在dev分支上正常提交，比如增加一个文件。\n然后提交：\ngit add *.*\ngit commit -m \"branch test\"\ngit push --set-upstream origin dev\n\n\n3 切换为主分支现在，dev分支的工作完成，我们就可以切换回master分支：\ngit checkout master\n\n切换回master分支后，再查看一个README.md文件，刚才添加的内容不见了！因为那个提交是在dev分支上，而master分支此刻的提交点并没有变：\n\n4 合并分支现在，我们把branch分支的工作成果合并到master分支上：\ngit merge dev\ngit merge命令用于合并指定分支到当前分支。合并后，再查看readme.txt的内容，就可以看到，和dev分支的最新提交是完全一样的。\n\n注意到上面的Fast-forward信息，Git告诉我们，这次合并是“快进模式”，也就是直接把master指向dev的当前提交，所以合并速度非常快。\n当然，也不是每次合并都能Fast-forward，我们后面会讲其他方式的合并。\n5 删除分支合并完成后，就可以放心地删除dev分支了：\n删除本地分支\ngit branch -d dev\n删除后，查看branch，就只剩下master分支了：\n\ngit branch    #查看本地分支\ngit branch -a #查看所有分支（包含远程分支）\n因为创建、合并和删除分支非常快，所以Git鼓励你使用分支完成某个任务，合并后再删掉分支，这和直接在master分支上工作效果是一样的，但过程更安全。\n删除远程分支\ngit push origin --delete dev ","slug":"LearningGit-2","date":"2023-08-17T00:59:10.616Z","categories_index":"学习记录","tags_index":"Git","author_index":"ApolloH"},{"id":"5d0343ebd26904f0692de3f19d1c235a","title":"Git学习笔记（上）","content":"Learning Git 1 【Basic】Git Referrence\nIDE：Ctrl+&#96; 打开终端Terminal Shell\n设置用户名git config --global user.name \"hust\"\ngit config --global user.email \"hust@hust.edu.cn\"\n\n方式一初始化 git仓库git init\n\n为git仓库增加README.md文件git add README.md\n\n提交更改git commit -m \"first commit\"\n\n设置远程仓库git remote add origin https://github.com/yourRepoName.git\n\n推送到远程仓库git push -u origin master\n\n\n方式二从远程仓库克隆git clone https://github.com/yourRepoName.git\n\n为git仓库增加README.md文件git add README.md\n\n提交更改git commit -m \"first commit\"\n\n推送到远程仓库git push -u origin master\n\n\n回退分支git log\ngit reset --hard &lt;version> ","slug":"LearningGit-1","date":"2023-08-17T00:59:10.616Z","categories_index":"学习记录","tags_index":"Git","author_index":"ApolloH"},{"id":"f681e0cd540bcbc533f55058e33bb3bb","title":"Markdown学习笔记[1]","content":"本文是markdown学习笔记的第一期，主要内容是markdown的基本语法，包括标题、文本样式、段落、引用、代码、列表和分割线等内容。\n1. 标题 Markdown1.1 第一种写法在一行文本的开头输入若干个”#”，并用一个空格与文本分隔，该行文本即可识别为相应等级的标题（最小标题位6级）。\n# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题\n\n1.2 第二种写法一级标题的另一种写法，在一行文字下方连续输入3个以上的等号”&#x3D;”二级标题的另一种写法，在一行文字下方连续输入3个以上的减号”-“\n这是一级标题\n===\n\n这是二级标题\n---\n\n1.3 第3种写法与第1种写法类似\n# 一级标题 #\n## 二级标题 ##\n### 三级标题 ###\n\n多级标题实际效果\n一级标题二级标题三级标题四级标题五级标题六级标题\n2. 文本样式2.1 加粗在正文中想要加粗的效果，可以在文字的前后分别输入2个星号”*”,或短下划线”_”\n**粗体**__粗体__\n实际效果 粗体粗体\n2.2 斜体在正文中想要倾斜的效果，可以在文字的前后分别输入1个星号”*”,或短下划线”_”\n*斜体* _斜体_\n实际效果\n斜体 斜体2.3 粗体+斜体 **_粗体+斜体_** __*粗体+斜体*__\n__*粗体+斜体*__ *__粗体+斜体__*\n实际效果 粗体+斜体 粗体+斜体粗体+斜体 粗体+斜体\n2.4 字体颜色markdown通过html实现字体颜色\n&lt;label style=\"color:red\">内容1&lt;/label>\n&lt;label style=\"color:#ff0000\">内容2&lt;/label>\n&lt;label style=\"color:#f00\">内容3&lt;/label>\n内容 内容 内容\n2.5 删除线在正文中想要删除的文字前后分别输入两个波浪号”~~”\n~~删除~~\n 删除\n2.6 下划线在正文中想要下划线的文字前后分别输入”&lt;u&gt;“和”&lt;/u&gt;“\n&lt;u>下划线&lt;/u>\n\n\n3. 段落3.1 换行符Markdown语言中的换行符\n这是第一行&lt;br>这是第二行\n\n实际效果：这是第一行这是第二行Tip：html中换行符对封闭不做要求\n3.2 强调如果要加入内容框，想要特别强调某个段落。可以在该段的开头连续输入4个空格。\n此处为连续强调的段落。如果想跳出强调段落，只需插入一行空行。\n\n\n4. 引用4.1 引用当在一段文字前输入大于号”&gt;”，并用一个空格与正文分隔，这段话就会以引用的方式呈现，例如：\n> 这是一句引用。\n\n实际效果\n\n\n\n\n\n\n\n\n\n这是一句引用。\n4.2 引用+强调>     这是一句被强调的引用\n实际效果\n\n\n\n\n\n\n\n\n\n这是一句被强调的引用\n\n4.3 引用嵌套只需要不断增加正文前的大于号”&gt;”。\n\n\n\n\n\n\n\n\n\n这是第一层的引用。\n\n这是第二层的引用。\n\n这是第三层的引用\n\n\n\n5.代码5.1 行中插入在文档中的某一行插入一句较短的代码片段，可以在代码的前后输入一个反撇号” &#96; “（键盘ESC键下方波浪线“~”所在键）\n例如，git仓库初始化的命令行为git init\n5.2 行间插入如果想输入成段代码，可以将成段的代码以三个连续的反撇号”&#96;”包围。可以根据语言高亮代码，直接在开始的反撇号后加入语言名称\npython\ndef Function():\n    a=0\n    b=1\n    print((a+b))\n    pass\n\njavascript\nalert(\"Hello World\")\n\ncsharp\nnamespace demo&#123;\n    public class MyClass&#123;\n        public MyClass()&#123;\n\n        &#125;\n\n        private int _value;\n    &#125;\n&#125;\n\n\n6. 列表在Markdown中的列表有两种：无序列表和有序列表。\n6.1 无序列表：在文字开头添加一个星号”*”，或者是加号”+”，减号”-“，并用空格与正文分隔，即可创建无序列表。\n* 这是一个无序列表的第一项\n* 这是第二项\n* 这是最后一项\n\n+ 这是一个无序列表的第一项\n+ 这是第二项\n+ 这是最后一项\n\n- 这是一个无序列表的第一项\n- 这是第二项\n- 这是最后一项\n实际效果\n\n这是一个无序列表的第一项\n这是第二项\n这是最后一项\n\n\n这是一个无序列表的第一项\n这是第二项\n这是最后一项\n\n\n这是一个无序列表的第一项\n这是第二项\n这是最后一项\n\n6.2 有序列表：在文字的开头，添加一个阿拉伯数字和一个点”.”，并用空格与正文分隔，即可创建有序列表。\n1. 这是一个有序列表的第一项\n2. 这是第二项\n3. 注意：不管输入的是什么数字，渲染后的有序列表都会按顺序进行递增！！！\n\n实际效果\n\n这是一个有序列表的第一项\n这是第二项\n注意：不管输入的是什么数字，渲染后的有序列表都会按顺序进行递增！！！\n\n\n7. 分割线在Markdown中，在一个空行后另起一行的开头输入3个以上的星号”*”，或者减号”-“，即可插入一条分割线。\n---\n***\n* * *\n- - -\n\n","slug":"LearningMarkdown-1","date":"2023-08-16T01:34:08.779Z","categories_index":"学习记录","tags_index":"Markdown","author_index":"ApolloH"}]